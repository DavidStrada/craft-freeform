!function(Q){var F={};function U(B){if(F[B])return F[B].exports;var I=F[B]={i:B,l:!1,exports:{}};return Q[B].call(I.exports,I,I.exports,U),I.l=!0,I.exports}U.m=Q,U.c=F,U.d=function(Q,F,B){U.o(Q,F)||Object.defineProperty(Q,F,{enumerable:!0,get:B})},U.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},U.t=function(Q,F){if(1&F&&(Q=U(Q)),8&F)return Q;if(4&F&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var B=Object.create(null);if(U.r(B),Object.defineProperty(B,"default",{enumerable:!0,value:Q}),2&F&&"string"!=typeof Q)for(var I in Q)U.d(B,I,function(F){return Q[F]}.bind(null,I));return B},U.n=function(Q){var F=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return U.d(F,"a",F),F},U.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},U.p="",U(U.s=22)}({22:function(module,exports){eval('$(function () {\n  var $classSelector = $("select#class");\n  $classSelector.on({\n    change: function change() {\n      var val = $(this).val().split("\\\\").join("");\n      $("div#settings-" + val).show().siblings().hide();\n    }\n  });\n  $classSelector.trigger("change");\n  var $name = $("#name");\n\n  if (!$name.val().length) {\n    $name.on({\n      keyup: function keyup() {\n        $("#handle").val(generateHandle($(this).val())).trigger("change");\n      }\n    });\n  }\n\n  var $returnUri = $("input.setting-return_uri");\n  var urlType = $("#integration-type").data("type");\n  $("#handle").on({\n    change: function change() {\n      var val = $(this).val();\n      var updatedUrl = Craft.getCpUrl("freeform/settings/" + urlType + "/" + val);\n      $returnUri.val(updatedUrl);\n    },\n    keyup: function keyup() {\n      $(this).trigger("change");\n    }\n  });\n  var $authChecker = $("#auth-checker");\n  var pendingStatusCheck = $(".pending-status-check", $authChecker);\n  var integrationId = pendingStatusCheck.data("id");\n  var type = pendingStatusCheck.data("type");\n\n  if (integrationId) {\n    var data = {\n      id: integrationId\n    };\n    data[Craft.csrfTokenName] = Craft.csrfTokenValue;\n    $.ajax({\n      url: Craft.getCpUrl("freeform/" + type + "/check"),\n      data: data,\n      type: "post",\n      dataType: "json",\n      success: function success(json) {\n        pendingStatusCheck.hide();\n\n        if (json.success) {\n          $(".authorized", $authChecker).show();\n        } else {\n          $(".not-authorized", $authChecker).show();\n\n          if (json.errors) {\n            var errors = json.errors;\n\n            if (typeof errors !== "string") {\n              errors = errors.join(". ");\n            }\n\n            $(".not-authorized .errors", $authChecker).empty().text(errors);\n          }\n        }\n      }\n    });\n  }\n});\n\nfunction generateHandle(value) {\n  // Remove HTML tags\n  var handle = value.replace("/<(.*?)>/g", ""); // Remove inner-word punctuation\n\n  handle = handle.replace(/[\'"‘’“”\\[\\]\\(\\)\\{\\}:]/g, ""); // Make it lowercase\n\n  handle = handle.toLowerCase(); // Convert extended ASCII characters to basic ASCII\n\n  handle = Craft.asciiString(handle); // Handle must start with a letter\n\n  handle = handle.replace(/^[^a-z]+/, ""); // Get the "words"\n\n  var words = Craft.filterArray(handle.split(/[^a-z0-9]+/));\n  handle = ""; // Make it camelCase\n\n  for (var i = 0; i < words.length; i++) {\n    if (i === 0) {\n      handle += words[i];\n    } else {\n      handle += words[i].charAt(0).toUpperCase() + words[i].substr(1);\n    }\n  }\n\n  return handle;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///22\n')}});