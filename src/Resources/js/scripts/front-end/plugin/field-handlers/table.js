!function(Q){var B={};function F(U){if(B[U])return B[U].exports;var I=B[U]={i:U,l:!1,exports:{}};return Q[U].call(I.exports,I,I.exports,F),I.l=!0,I.exports}F.m=Q,F.c=B,F.d=function(Q,B,U){F.o(Q,B)||Object.defineProperty(Q,B,{enumerable:!0,get:U})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,B){if(1&B&&(Q=F(Q)),8&B)return Q;if(4&B&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var U=Object.create(null);if(F.r(U),Object.defineProperty(U,"default",{enumerable:!0,value:Q}),2&B&&"string"!=typeof Q)for(var I in Q)F.d(U,I,function(B){return Q[B]}.bind(null,I));return U},F.n=function(Q){var B=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(B,"a",B),B},F.o=function(Q,B){return Object.prototype.hasOwnProperty.call(Q,B)},F.p="",F(F.s=3)}({3:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\nvar pattern = /([^\\[]+)\\[(\\d+)\\](\\[\\d+\\])$/g;\n\nvar removeRow = function removeRow(event) {\n  if (event.target.closest('tbody').querySelectorAll('tr').length === 1) {\n    return;\n  }\n\n  event.target.closest('tr').remove();\n};\n\nvar handle = function handle(freeform) {\n  var tables = freeform.form.querySelectorAll('[data-freeform-table]');\n  tables.forEach(function (table) {\n    var button = table.parentNode.querySelector('[data-freeform-table-add-row]');\n    var removeRowButtons = table.querySelectorAll('[data-freeform-table-remove-row]');\n\n    for (var j = 0; j < removeRowButtons.length; j++) {\n      var removeButton = removeRowButtons[j];\n      removeButton.addEventListener('click', removeRow);\n    }\n\n    if (button) {\n      var getNextMaxIndex = function getNextMaxIndex() {\n        var inputs = table.querySelectorAll('textarea, input, select');\n        var maxIndex = 0;\n\n        for (var i = 0; i < inputs.length; i++) {\n          var input = inputs[i];\n          var matches = pattern.exec(input.name);\n          pattern.lastIndex = 0;\n\n          if (!matches) {\n            continue;\n          }\n\n          var index = parseInt(matches[2]);\n          maxIndex = Math.max(maxIndex, index);\n        }\n\n        return ++maxIndex;\n      };\n\n      button.addEventListener('click', function () {\n        var referenceRow = table.querySelector('tbody > tr:first-child');\n\n        if (referenceRow) {\n          var cloneRow = referenceRow.cloneNode(true);\n          var inputs = cloneRow.querySelectorAll('textarea, input, select');\n          var maxIndex = getNextMaxIndex();\n\n          for (var i = 0; i < inputs.length; i++) {\n            var item = inputs[i];\n            var defaultValue = item.dataset.defaultValue || '';\n            item.name = item.name.replace(pattern, \"$1[\".concat(maxIndex, \"]$3\"));\n\n            if (item.tagName === 'SELECT') {\n              var firstOption = item.querySelector('option:first-child');\n\n              if (firstOption) {\n                defaultValue = firstOption.value;\n              }\n            } else {\n              item.checked = false;\n            }\n\n            item.value = defaultValue;\n          }\n\n          var removeRowButton = cloneRow.querySelector('[data-freeform-table-remove-row]');\n\n          if (removeRowButton) {\n            removeRowButton.addEventListener('click', removeRow);\n          }\n\n          table.querySelector('tbody').appendChild(cloneRow);\n        }\n      });\n    }\n  });\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (handle);\n\nif (!Element.prototype.matches) {\n  Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n}\n\nif (!Element.prototype.closest) {\n  Element.prototype.closest = function (s) {\n    var el = this;\n\n    do {\n      if (el.matches(s)) {\n        return el;\n      }\n\n      el = el.parentElement || el.parentNode;\n    } while (el !== null && el.nodeType === 1);\n\n    return null;\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")}});