!function(Q){var e={};function F(t){if(e[t])return e[t].exports;var U=e[t]={i:t,l:!1,exports:{}};return Q[t].call(U.exports,U,U.exports,F),U.l=!0,U.exports}F.m=Q,F.c=e,F.d=function(Q,e,t){F.o(Q,e)||Object.defineProperty(Q,e,{enumerable:!0,get:t})},F.r=function(Q){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(Q,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(Q,"__esModule",{value:!0})},F.t=function(Q,e){if(1&e&&(Q=F(Q)),8&e)return Q;if(4&e&&"object"==typeof Q&&Q&&Q.__esModule)return Q;var t=Object.create(null);if(F.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:Q}),2&e&&"string"!=typeof Q)for(var U in Q)F.d(t,U,function(e){return Q[e]}.bind(null,U));return t},F.n=function(Q){var e=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(e,"a",e),e},F.o=function(Q,e){return Object.prototype.hasOwnProperty.call(Q,e)},F.p="",F(F.s=19)}({19:function(module,exports,__webpack_require__){eval("function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nif (_typeof(Craft.Freeform) === ( true ? \"undefined\" : undefined)) {\n  Craft.Freeform = {};\n}\n\nvar getDefaultSourceKey = function getDefaultSourceKey() {\n  // Did they request a specific category group in the URL?\n  var defaultFormHandle = window.defaultFormHandle;\n\n  if (this.settings.context === 'index' && typeof defaultFormHandle !== 'undefined') {\n    for (var i = 0; i < this.$sources.length; i++) {\n      var $source = $(this.$sources[i]);\n\n      if ($source.data('handle') === defaultFormHandle) {\n        return $source.data('key');\n      }\n    }\n  }\n\n  return this.base();\n};\n\nvar updateButton = function updateButton() {\n  if (!this.$source) {\n    return;\n  }\n\n  var handle = this.$source.data('handle');\n\n  if (this.settings.context === 'index' && typeof history !== 'undefined') {\n    var uri = this.baseUrl;\n\n    if (handle) {\n      uri += '/' + handle;\n    }\n\n    history.replaceState({}, '', Craft.getUrl(uri));\n  }\n};\n\nCraft.Freeform.SubmissionsIndex = Craft.BaseElementIndex.extend({\n  baseUrl: 'freeform/submissions',\n  afterInit: function afterInit() {\n    this.on('selectSource', $.proxy(this, 'updateButton'));\n    this.on('selectSite', $.proxy(this, 'updateButton'));\n    this.base();\n  },\n  getViewClass: function getViewClass(mode) {\n    switch (mode) {\n      case \"table\":\n        return Craft.Freeform.SubmissionsTableView;\n\n      default:\n        return this.base(mode);\n    }\n  },\n  getDefaultSort: function getDefaultSort() {\n    return [\"dateCreated\", \"desc\"];\n  },\n  getDefaultSourceKey: getDefaultSourceKey,\n  updateButton: updateButton\n});\nCraft.Freeform.SpamSubmissionsIndex = Craft.BaseElementIndex.extend({\n  baseUrl: 'freeform/spam',\n  reasonContainer: null,\n  reasonMenuBtn: null,\n  selectedReason: null,\n  getDefaultSourceKey: getDefaultSourceKey,\n  afterInit: function afterInit() {\n    var _this = this;\n\n    this.reasonContainer = $(\"<div></div>\");\n    this.reasonContainer.append($(\"#spam-reasons\").html());\n    this.reasonMenuBtn = $('.btn.menubtn', this.reasonContainer);\n    this.$statusMenuContainer.before(this.reasonContainer);\n    $('*[data-reason]', this.reasonContainer).on({\n      click: function click(event) {\n        var target = event.target;\n        var reason = $(target).data('reason');\n        var label = $(target).text();\n        $(target).addClass('sel').parent().siblings().find('a').removeClass('sel');\n\n        _this.reasonMenuBtn.text(label);\n\n        _this.selectedReason = reason;\n        _this.settings.criteria = _objectSpread(_objectSpread({}, _this.settings.criteria), {}, {\n          spamReason: reason\n        });\n\n        _this.updateElements();\n      }\n    });\n    this.on('selectSource', $.proxy(this, 'updateButton'));\n    this.on('selectSite', $.proxy(this, 'updateButton'));\n    this.base();\n  },\n  updateButton: updateButton\n}); // Register the Freeform SubmissionsIndex class\n\nCraft.registerElementIndexClass(\"Solspace\\\\Freeform\\\\Elements\\\\Submission\", Craft.Freeform.SubmissionsIndex);\nCraft.registerElementIndexClass(\"Solspace\\\\Freeform\\\\Elements\\\\SpamSubmission\", Craft.Freeform.SpamSubmissionsIndex);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///19\n")}});