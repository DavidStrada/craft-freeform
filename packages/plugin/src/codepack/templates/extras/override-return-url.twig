{% extends "demo/_layout" %}

{% set pageTitle = "Overiding Success Return URL | Extras" %}

{# Replace 'freeformOverrideReturnUrl' with your form handle #}
{% set demoFormHandle = "freeformOverrideReturnUrl" %}

{% block content %}

    {% set form = freeform.form(demoFormHandle, {
        returnUrl: "demo/extras/override-return-url/default-path",
        formattingTemplate: "flexbox.twig"
    }) %}

    <div class="freeform-page-heading">
        <h2>Overiding Success Return URL</h2>
        <p>This example shows how to manipulate a form to allow a user to override the Return URL for successful submits. This could be done via a checkbox, select field, radio group, or hidden field. This specific example just uses a checkbox that is paired with the Submit button for a simpler setup.</p>
    </div>

    {% if form and form.settings.ajax is empty %}

        {{ form.render }}

    {% else %}

        <div class="freeform-error{{ colorMode == "dark" ? " freeform-notice-dark" }}">
            <p>You must rename your form handle to <code>{{ demoFormHandle }}</code> and disable the <b>Enable AJAX</b> checkbox in the form builder for this part of the demo to work.</p>
        </div>

    {% endif %}

    {# Instructions to get this page working correctly #}
    <div class="extras-instructions">
        <h4>This page will not display correctly until...</h4>
        <p>
            In order to view this page live, you'll need to make some adjustments to this template or on your test from:
            <ol>
                <li>Rename your test form handle to <code>{{ demoFormHandle }}</code> or adjust the form handle name inside this template to match your test form.</li>
                <li>Be sure to disable the <b>Enable AJAX</b> setting inside the form builder for this form.</li>
                <li>Make sure your test form includes a Submit button in the form builder layout.</li>
            </ol>
        </p>
    </div>

{% endblock %}